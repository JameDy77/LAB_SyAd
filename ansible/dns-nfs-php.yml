---
- hosts: all
  become: yes
  become_user: root

  tasks:
  - name: Install Bind at ansible-mgn
    yum:
      name: bind
      state: latest
    when: ansible_connection == 'local'

  - name: Edit nameserver listen IP Address
    lineinfile:
      path: /etc/named.conf
      regexp: 'listen-on port 53 { 127.0.0.1; };'
      line: '         listen-on port 53 { 127.0.0.1; 192.168.100.11;};'
      backup: yes
    when: ansible_connection == 'local'

  - name: Edit name server allow query
    lineinfile:
      path: /etc/named.conf
      regexp: 'allow-query     { localhost; };'
      line: '        allow-query    { any; };'
      backup: yes
    when: ansible_connection == 'local'

  - name: Include named local
    lineinfile:
      path: /etc/named.conf
      line: 'include "/etc/named/named.conf.local";'
      backup: yes
    when: ansible_connection == 'local'

  - name: Copy named.con.local file
    template:
      src: template/named.conf.local.j2
      dest: /etc/named/named.conf.local
      owner: root
      group: root
      mode: "0755"
    when: ansible_connection == 'local'

  - name: Create Zones directory in /etc/named
    file:
      path: /etc/named/zones
      state: directory
      mode: 0755
    when: ansible_connection == 'local'

  - name: Copy forward and revest zone file to /etc/named/zones
    template:
      src: '{{ item.source }}'
      dest: '{{ item.destination }}'
      owner: root
      group: root
      mode: "0755"
    loop:
    - { source: 'template/db.mynet-702.com.j2', destination: '/etc/named/zones/db.mynet-702.com' }
    - { source: 'template/db.my-site.com.j2', destination: '/etc/named/zones/db.my-site.com' }
    - { source: 'template/db.192.168.100.j2', destination: '/etc/named/zones/db.100.168.192' }
    when: ansible_connection == 'local'

  - name: Start Named Service
    service:
      name: named
      state: started
    when: ansible_connection == 'local'

  - name: Install firewalld
    yum:
      name: firewalld
      state: latest    
    when: ansible_connection == 'local'

  - name: Open firewall
    firewalld:
      port: '{{ item }}'
      permanent: yes
      state: enabled
    loop:
    - "53/udp"
    - "53/tcp"
    when: ansible_connection == 'local'

  - name: Start firewalld
    service:
      name: firewalld
      state: started
    when: ansible_connection == 'local'

  - name: Copy resolv file
    template:
      src: template/resolv.conf.j2
      dest: /etc/resolv.conf
      owner: root
      group: root
      mode: "0644"

  - name: Restart firewalld
    service:
      name: firewalld
      state: restarted
    when: ansible_connection == 'local'

  - name: Install Bind all Server
    yum:
      name: bind-utils
      state: latest

  - name : Check Result
    command: nslookup ansible-mgn.mynet-702.com
    register: myoutput
  - debug: msg="{{ myoutput.stdout }}"

- hosts: db
  become: yes
  become_user: root

  tasks:
  - name: Install MariaDB-Server
    yum:
      name: mariadb-server
      state: latest

  - name: Enable service MariaDB-Server, and not touch the state
    service:
      name: mariadb
      enabled: yes

  - name: Start service MariaDB-Server, if not started
    service:
      name: mariadb
      state: started
  - name: Install nfs server
    yum:
      name: nfs-utils
      state: latest

  - name: Enable service NFS, and not touch the state
    service:
      name: '{{ item }}' 
      enabled: yes
    loop:
      - "nfs-server"
      - "rpcbind"
      - "nfs-lock"
      - "nfs-idmap"
      - "firewalld"

  - name: Start NFS Service
    service: 
      name: '{{ item }}' 
      state: started
    loop:
      - "nfs-server"
      - "rpcbind"
      - "nfs-lock"
      - "nfs-idmap"
      - "firewalld"

  - name: Open firewall service http and https
    firewalld: 
      service: '{{ item }}'
      permanent: yes 
      state: enabled
    loop:
      - "nfs"
      - "mountd"
      - "rpc-bind"
  
  - name: Create directory NFS Share
    file:
      path: /var/nfs
      state: directory
      owner: nfsnobody
      group: nfsnobody
      mode: 0755
    
  - name: Config NFS Share
    lineinfile: 
      path: /etc/exports
      line: '/var/nfs    *(rw,sync,no_root_squash,no_all_squash)' 
      backup: yes
  
  - name: Restart NFS Service
    service: 
      name: 'nfs-server' 
      state: restarted
  
  - name: Create directory wwwroot
    file:
      path: /var/nfs/{{ item }}
      state: directory
      owner: nfsnobody
      group: nfsnobody
      mode: 0755
    loop:
      - my-site.com/html
      - my-site.com/log
      - mynet-702.com/html
      - mynet-702.com/log
  
  - name: Enable service Firewall, and not touch the state
    service:
      name: firewalld
      enabled: yes

  - name: Start service MariaDB-Server, if not started
    service:
      name: firewalld
      state: started

  - name: Open firewall 3306 tcp 
    firewalld: 
      port: "3306/tcp"
      permanent: yes 
      state: enabled

  - name: Restart firewalld service
    service: 
      name: firewalld 
      state: restarted

  - name: Copy index.php to web server
    template:
      src: 'template/index.php.j2'
      dest: '/var/nfs/{{ item }}/html/index.php'
      owner: root
      group: root
      mode: "0755"
    loop:
      - my-site.com
      - mynet-702.com

- hosts: web
  become: yes
  become_user: root

  tasks:

  - name: Install remi repo.
    yum: 
      name: http://rpms.remirepo.net/enterprise/remi-release-7.rpm 
      state: latest

  - name: Import remi GPG key.
    rpm_key:
      key: http://rpms.remirepo.net/RPM-GPG-KEY-remi
      state: present

  - name: Install yum-utils.
    yum:
      name: yum-utils
      state: latest
    
  - name: Enable remi-php73
    command: yum-config-manager --enable remi-php73

  - name: Install httpd and php 7.3 and php module
    yum:
      name:
        - httpd
        - php 
        - php-cli 
        - php-fpm
        - php-mysqlnd
        - php-zip
        - php-devel
        - php-gd
        - php-mcrypt
        - php-mbstring
        - php-curl
        - php-xml
        - php-pear
        - php-bcmath
        - php-json
      state: latest
    
  - name: Edit timezone in php.ini
    lineinfile:
      path: /etc/php.ini
      regexp: ';date.timezone'
      line: 'date.timezone = Asia/Bangkok'
      backup: yes
  
  - name: Copy Vhost file to /etc/httpd/conf.d
    template:
      src: '{{ item.source }}'
      dest: '{{ item.destination }}'
      owner: root
      group: root
      mode: "0755"
    loop:
      - { source: 'template/my-site-nfs.com.j2' , destination: '/etc/httpd/conf.d/my-site.com.conf'}
      - { source: 'template/mynet-702-nfs.com.j2' , destination: '/etc/httpd/conf.d/mynet-702.com.conf'}

  - name: Enable service httpd, and not touch the state
    service:
      name: httpd
      enabled: yes

  - name: Create directory wwwroot
    file:
      path: /var/nfs/www/{{ item }}
      state: directory
      owner: nfsnobody
      group: nfsnobody
      mode: 0755
    loop:
      - my-site.com/html
      - my-site.com/log
      - mynet-702.com/html
      - mynet-702.com/log

  - name: Start httpd Service
    service:
      name: httpd
      state: started

  - name: Enable service Firewall, and not touch the state
    service:
      name: firewalld
      enabled: yes

  - name: Start firewalld Service
    service:
      name: firewalld
      state: started

  - name: Open firewall service http and https
    firewalld:
      service: '{{ item }}'
      permanent: yes
      state: enabled
    loop:
      - "http"
      - "https"

  - name: Restart firewalld service
    service:
      name: firewalld
      state: restarted

  - name: Mount 
    command: mount 192.168.100.70:/var/nfs /var/nfs/www